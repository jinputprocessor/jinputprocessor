name: Publish Core Module to Maven Central

on:
  push:
    tags:
      - 'v*'  # Runs only for version tags (e.g., v1.0.0)

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from Git tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Update pom.xml version
        run: mvn versions:set -DnewVersion=${{ env.RELEASE_VERSION }} -pl jinputprocessor-core -am

      - name: Commit version change
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -am "Set version to ${{ env.RELEASE_VERSION }}"
          git push origin HEAD:main  # Push the updated version back to main

      - name: Run tests
        run: mvn clean test

      - name: Build and package core module
        run: mvn clean install -pl jinputprocessor- -am

      - name: Publish core module to Maven Central
        run: mvn clean deploy -pl jinputprocessor-core -am -P release
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Bump to next SNAPSHOT version
        run: |
          NEXT_VERSION=$(echo ${{ env.RELEASE_VERSION }} | awk -F. '{print $1"."$2"."$3+1"-SNAPSHOT"}')
          mvn versions:set -DnewVersion=$NEXT_VERSION -pl jinputprocessor-core -am
          git commit -am "Set version to $NEXT_VERSION"
          git push origin HEAD:main

